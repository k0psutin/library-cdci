name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  notify:
    runs-on: ubuntu-18.04
    if: ${{ !contains(github.event.head_commit.message, '#skip') }}
    steps:
      - uses: actions/checkout@v2
      - name: send telegram message on merge
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} commit merged.
            Commit message: ${{ github.event.commits[0].message }}
            
            Build started.
  deploy:
    runs-on: ubuntu-18.04
    if: ${{ !contains(github.event.head_commit.message, '#skip') }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with: 
          node-version: '16.3.0'
      - name: Compile frontend and run lint
        run: |
          cd frontend
          npm install
          npm run lint
          cd ..
      - name: Compile backend and run lint
        run: |
          cd backend 
          npm install
          npm run lint
          npm run build
          cd ..
      - name: Heroku login credentials
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      - name: Login to heroku
        run: heroku container:login
      - name: Build docker image
        run: docker build --build-arg MONGODB_URI=$MONGODB_URI --build-arg JWT_SECRET=$JWT_SECRET -t "registry.heroku.com/$HEROKU_APP_NAME/web" .
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      - name: Push docker image to heroku
        run: docker push registry.heroku.com/$HEROKU_APP_NAME/web
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      - name: Release 
        run: heroku container:release web -a ${{ secrets.HEROKU_APP_NAME }}
  healthcheck:
    needs: deploy
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Health check
        uses: jtalk/url-health-check-action@v2
        with:
          url: https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com/health
          max-attempts: 3
          retry-delay: 5s
  finish:
    needs: healthcheck
    runs-on: ubuntu-18.04
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v2
      - name: send telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} commit merged.
            Commit message: ${{ github.event.commits[0].message }}
            
            Deployed successfully.
  rollback:
    needs: healthcheck
    runs-on: ubuntu-18.04
    if: ${{ failure() }}
    steps:
      - uses: actions/checkout@v2
      - name: send failure message to telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} commit merged.
            Commit message: ${{ github.event.commits[0].message }}
            
            Deployment unsuccessful. Roll back initiated.
      - name: Heroku login credentials
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      - name: Login to Heroku
        run: heroku container:login
      - name: roll back Heroku
        run: heroku rollback -a ${{ secrets.HEROKU_APP_NAME }}

